from math import sin
import math
from math import sqrt
import turtle

turtle.speed(100000000)
turtle.shape("turtle")

def sgn(t):
    return t / abs(t) if 0.1 < t or -0.1 > t else 0

def step(t):
    return int(t >= 0)

def x(t):
    return ((-1/2*sin(1/7 - 10*t) - 2/5*sin(4/7 - 8*t) - 2/7*sin(20/19 - 7*t) - 1/10*sin(5/9 - 6*t) - 7/3*sin(1/10 - 2*t) + 139/4*sin(t + 16/7) + 15/4*sin(3*t + 17/5) + 5/7*sin(4*t + 1/3) + 11/12*sin(5*t + 22/5) + 1/12*sin(9*t + 19/8) + 1/5*sin(11*t + 12/5) + 1/4*sin(12*t + 3/5) - 4115/13)*step(147*math.pi - t)*step(t - 143*math.pi) + (-1/5*sin(1/11 - 10*t) - 5/9*sin(3/8 - 6*t) - 7/10*sin(8/7 - 4*t) + 248/7*sin(t + 11/6) + 1/2*sin(2*t + 13/3) + 38/11*sin(3*t + 9/4) + 11/9*sin(5*t + 28/11) + 5/9*sin(7*t + 11/4) + 2/7*sin(8*t + 1/22) + 3/8*sin(9*t + 21/8) + 1/3*sin(11*t + 26/9) + 1/6*sin(12*t + 1/8) - 1600/3)*step(143*math.pi - t)*step(t - 139*math.pi) + (-1/2*sin(3/10 - 8*t) - 3/5*sin(3/5 - 6*t) + 124/9*sin(t + 18/7) + 10/7*sin(2*t + 7/5) + 39/10*sin(3*t + 12/5) + 4/9*sin(4*t + 3/2) + 7/6*sin(5*t + 9/4) + 17/16*sin(7*t + 13/10) + 2/9*sin(9*t + 6/7) + 2/9*sin(10*t + 17/6) + 1/4*sin(11*t + 53/18) + 1/10*sin(12*t + 21/5) - 1274/3)*step(139*math.pi - t)*step(t - 135*math.pi) + (-1/9*sin(1/27 - 12*t) - 1/5*sin(2/3 - 10*t) + 349/8*sin(t + 7/4) + 31/30*sin(2*t + 9/4) + 19/5*sin(3*t + 21/11) + 1/6*sin(4*t + 4) + 11/9*sin(5*t + 29/15) + 1/3*sin(6*t + 23/5) + 3/5*sin(7*t + 3/2) + 1/4*sin(8*t + 33/7) + 4/7*sin(9*t + 5/3) + 1/4*sin(11*t + 11/5) + 2511/7)*step(135*math.pi - t)*step(t - 131*math.pi) + (-1/4*sin(3/5 - 10*t) - 1/3*sin(2/5 - 9*t) + 4/5*sin(6*t) + 357/8*sin(t + 4) + 14/9*sin(2*t + 6/11) + 141/28*sin(3*t + 29/10) + 3/4*sin(4*t + 1/5) + 12/7*sin(5*t + 27/13) + 2/3*sin(7*t + 11/8) + 2/7*sin(8*t + 1/14) + 2/5*sin(11*t + 17/4) + 1/33*sin(12*t + 3/2) + 1109/7)*step(131*math.pi - t)*step(t - 127*math.pi) + (-1/4*sin(11/8 - 12*t) - 3/4*sin(7/6 - 9*t) - 2/7*sin(1/6 - 8*t) - 1/9*sin(21/22 - 6*t) - 7/9*sin(3/7 - 2*t) + 233/6*sin(t + 19/7) + 3/5*sin(3*t + 8/3) + 7/10*sin(4*t + 1/7) + 2/5*sin(5*t + 23/12) + 3/4*sin(7*t + 22/7) + 1/5*sin(10*t + 8/5) + 1/3*sin(11*t + 5/3) - 1396/7)*step(127*math.pi - t)*step(t - 123*math.pi) + (-1/35*sin(4/7 - 12*t) - 1/4*sin(11/7 - 10*t) - 2/7*sin(6/11 - 9*t) - 4/5*sin(1/7 - 8*t) - 3/7*sin(5/7 - 6*t) - 8/15*sin(2/7 - 4*t) + 123/8*sin(t + 17/5) + 11/5*sin(2*t + 15/4) + 24/7*sin(3*t + 32/11) + 9/7*sin(5*t + 18/7) + 3/4*sin(7*t + 9/4) + 3/10*sin(11*t + 13/7) + 1361/4)*step(123*math.pi - t)*step(t - 119*math.pi) + (49/3*sin(t + 19/8) + 12/5*sin(2*t + 3/4) + 19/5*sin(3*t + 21/11) + 5/7*sin(4*t + 5/9) + 33/17*sin(5*t + 7/5) + 5/11*sin(6*t + 1/5) + 20/21*sin(7*t + 1) + 4/7*sin(8*t + 9/2) + 1/5*sin(9*t + 9/8) + 4/7*sin(10*t + 5/4) + 2/5*sin(11*t + 41/40) + 1/6*sin(12*t + 1/16) - 269/7)*step(119*math.pi - t)*step(t - 115*math.pi) + (-5/8*sin(4/9 - 12*t) + 247/7*sin(t + 17/4) + 8/5*sin(2*t + 29/7) + 16/3*sin(3*t + 37/10) + 6/7*sin(4*t + 2) + 9/4*sin(5*t + 13/4) + 5/6*sin(6*t + 4/3) + 9/7*sin(7*t + 3) + 3/4*sin(8*t + 4/7) + 5/6*sin(9*t + 43/14) + 1/4*sin(10*t + 3/5) + 1/7*sin(11*t + 15/4) - 3926/7)*step(115*math.pi - t)*step(t - 111*math.pi) + (-1/6*sin(1 - 9*t) - 3/4*sin(3/8 - 7*t) - 7/4*sin(8/9 - 5*t) - 3/7*sin(1/12 - 4*t) - 21/4*sin(7/6 - 3*t) - 16/11*sin(4/3 - 2*t) - 317/6*sin(7/5 - t) + 3/8*sin(6*t + 2/7) + 4/9*sin(8*t + 1/4) + 1/16*sin(10*t + 2/7) + 2/7*sin(11*t + 1/3) + 1/25*sin(12*t + 2/5) + 2453/10)*step(111*math.pi - t)*step(t - 107*math.pi) + (-6/13*sin(1/13 - 12*t) - 5/9*sin(9/7 - 6*t) - 9/8*sin(1/11 - 4*t) + 286/5*sin(t + 53/13) + 6/5*sin(2*t + 8/9) + 39/7*sin(3*t + 3) + 8/5*sin(5*t + 11/5) + 2/5*sin(7*t + 5/3) + 1/5*sin(8*t + 39/19) + 1/5*sin(9*t + 12/5) + 4/9*sin(10*t + 2/3) + 1/22*sin(11*t + 9/8) - 125/9)*step(107*math.pi - t)*step(t - 103*math.pi) + (-3/4*sin(19/13 - 8*t) - 11/6*sin(3/8 - 5*t) - 19/3*sin(19/20 - 3*t) - 181/9*sin(7/8 - t) + 46/5*sin(2*t + 5/3) + 5/6*sin(4*t + 7/5) + 12/13*sin(6*t + 41/10) + 24/23*sin(7*t + 1/10) + 1/8*sin(9*t + 37/9) + 1/5*sin(10*t + 9/2) + 1/4*sin(11*t + 1/9) + 1/2*sin(12*t + 13/3) - 4364/5)*step(103*math.pi - t)*step(t - 99*math.pi) + (-1/4*sin(19/18 - 12*t) - 1/5*sin(6/7 - 11*t) - 1/3*sin(3/5 - 10*t) - 5/7*sin(1/3 - 8*t) + 450/7*sin(t + 25/6) + 9/7*sin(2*t + 52/17) + 33/5*sin(3*t + 16/5) + 8/9*sin(4*t + 5/6) + 17/7*sin(5*t + 22/9) + 8/9*sin(6*t + 1/4) + 13/12*sin(7*t + 39/19) + 1/2*sin(9*t + 17/16) - 31/7)*step(99*math.pi - t)*step(t - 95*math.pi) + (-1/12*sin(14/9 - 11*t) - 3/7*sin(5/6 - 10*t) + 199/6*sin(t + 13/7) + 1/8*sin(2*t + 3/5) + 14/3*sin(3*t + 41/20) + 1/3*sin(4*t + 21/5) + 2*sin(5*t + 7/4) + 3/8*sin(6*t + 7/4) + 9/8*sin(7*t + 8/5) + 1/4*sin(8*t + 7/5) + 25/24*sin(9*t + 8/5) + 2/9*sin(12*t + 1/4) + 4691/14)*step(95*math.pi - t)*step(t - 91*math.pi) + (-1/4*sin(1/7 - 11*t) - 9/10*sin(4/3 - 6*t) + 333/7*sin(t + 6/5) + 35/9*sin(2*t + 5/4) + 31/4*sin(3*t + 7/9) + 2/3*sin(4*t + 1/6) + 33/17*sin(5*t + 2/5) + 21/22*sin(7*t + 1/11) + 8/9*sin(8*t + 41/9) + 2/3*sin(9*t + 1/5) + 5/9*sin(10*t + 29/7) + 2/3*sin(12*t + 25/8) - 2943/7)*step(91*math.pi - t)*step(t - 87*math.pi) + (-1/16*sin(2/7 - 10*t) - 1/2*sin(1/5 - 7*t) - 2/7*sin(1/18 - 6*t) - 5/3*sin(1/6 - 2*t) + 378/5*sin(t + 22/7) + 13/2*sin(3*t + 1/33) + 3/7*sin(4*t + 1/6) + 5/2*sin(5*t + 19/6) + 3/8*sin(8*t + 1/13) + 5/9*sin(9*t + 20/7) + 1/5*sin(11*t + 32/7) + 1/4*sin(12*t + 1/22) - 152/9)*step(87*math.pi - t)*step(t - 83*math.pi) + (-1/5*sin(3/5 - 12*t) - 2/9*sin(3/4 - 10*t) - 4/5*sin(1/4 - 4*t) - 13/6*sin(16/17 - 2*t) + 2998/37*sin(t + 5/3) + 61/7*sin(3*t + 11/6) + 23/8*sin(5*t + 13/7) + 1/3*sin(6*t + 1/6) + 9/7*sin(7*t + 2) + 4/7*sin(8*t + 1/5) + 4/7*sin(9*t + 7/4) + 1/4*sin(11*t + 56/19) - 922/3)*step(83*math.pi - t)*step(t - 79*math.pi) + (-2/7*sin(1/3 - 12*t) - 6/13*sin(1/6 - 10*t) + 1189/14*sin(t + 30/7) + 1/4*sin(2*t + 13/8) + 226/25*sin(3*t + 24/7) + 1/2*sin(4*t + 5/7) + 43/14*sin(5*t + 13/5) + 5/9*sin(6*t + 1/4) + 6/5*sin(7*t + 15/8) + 6/11*sin(8*t + 1/9) + 1/4*sin(9*t + 6/5) + 1/6*sin(11*t + 35/8) - 4217/9)*step(79*math.pi - t)*step(t - 75*math.pi) + (241/5*sin(t + 35/8) + 36/7*sin(2*t + 8/5) + 77/13*sin(3*t + 34/9) + 11/5*sin(4*t + 14/9) + 9/5*sin(5*t + 27/8) + 4/5*sin(6*t + 11/10) + 3/4*sin(7*t + 25/7) + 3/8*sin(8*t + 5/4) + 3/4*sin(9*t + 27/8) + 1/6*sin(10*t + 41/21) + 5/6*sin(11*t + 7/2) + 1/6*sin(12*t + 2/9) - 2545/8)*step(75*math.pi - t)*step(t - 71*math.pi) + (-2/3*sin(4/3 - 4*t) + 613/18*sin(t + 17/4) + 37/6*sin(2*t + 14/3) + 38/7*sin(3*t + 11/3) + 15/7*sin(5*t + 29/8) + 1/8*sin(6*t + 94/31) + 41/40*sin(7*t + 19/5) + 1/5*sin(8*t + 13/5) + 5/6*sin(9*t + 16/5) + 1/5*sin(10*t + 37/8) + 1/4*sin(11*t + 57/14) + 1/3*sin(12*t + 26/9) + 719/2)*step(71*math.pi - t)*step(t - 67*math.pi) + (622/27*sin(t + 15/7) + 19/2*sin(2*t + 58/13) + 37/6*sin(3*t + 37/18) + 19/7*sin(4*t + 58/13) + 13/5*sin(5*t + 9/4) + 3/4*sin(6*t + 15/4) + 4/3*sin(7*t + 22/9) + 2/5*sin(8*t + 39/19) + 7/8*sin(9*t + 11/5) + 1/4*sin(10*t + 35/8) + 1/3*sin(11*t + 9/4) + 1/3*sin(12*t + 11/7) + 1941/7)*step(67*math.pi - t)*step(t - 63*math.pi) + (-1/5*sin(7/6 - 12*t) - 7/9*sin(5/7 - 9*t) - 1/4*sin(11/7 - 8*t) - 5/3*sin(7/5 - 6*t) - 23/5*sin(1/6 - 4*t) + 91/5*sin(t + 9/4) + 208/9*sin(2*t + 5/6) + 107/18*sin(3*t + 39/20) + 23/5*sin(5*t + 5/3) + 9/4*sin(7*t + 1/2) + 4/5*sin(10*t + 1/39) + 2/7*sin(11*t + 17/4) - 4043/5)*step(63*math.pi - t)*step(t - 59*math.pi) + (-1/4*sin(1/21 - 12*t) - 6/7*sin(5/7 - 9*t) - 1/2*sin(12/13 - 6*t) - 13/10*sin(1/5 - 4*t) + 481/5*sin(t + 37/9) + 28/5*sin(2*t + 4/9) + 78/7*sin(3*t + 23/8) + 15/4*sin(5*t + 15/8) + 13/8*sin(7*t + 3/4) + 1/19*sin(8*t + 6/5) + 1/6*sin(10*t + 1) + 3/4*sin(11*t + 31/7) + 3434/15)*step(59*math.pi - t)*step(t - 55*math.pi) + (-1/4*sin(1/5 - 12*t) + 592/13*sin(t + 13/7) + 144/7*sin(2*t + 11/7) + 22/3*sin(3*t + 7/3) + 20/13*sin(4*t + 3/2) + 23/7*sin(5*t + 7/3) + 10/7*sin(6*t + 3/2) + 17/9*sin(7*t + 17/6) + 3/7*sin(8*t + 7/8) + 13/10*sin(9*t + 18/7) + 1/5*sin(10*t + 10/7) + 7/8*sin(11*t + 52/17) - 1607/5)*step(55*math.pi - t)*step(t - 51*math.pi) + (-3/5*sin(5/11 - 11*t) - 1/4*sin(1/3 - 10*t) - 20/13*sin(1/5 - 7*t) - 3/4*sin(1/5 - 6*t) - 3/5*sin(10/7 - 4*t) - 67/6*sin(1/9 - 3*t) + 1303/11*sin(t + 22/7) + 7/2*sin(2*t + 5/4) + 26/5*sin(5*t + 22/7) + 2/9*sin(8*t + 5/9) + 14/9*sin(9*t + 38/13) + 1/5*sin(12*t + 3/4) - 4237/13)*step(51*math.pi - t)*step(t - 47*math.pi) + (-3/8*sin(8/9 - 12*t) - 3/8*sin(11/8 - 9*t) - 2/5*sin(2/5 - 7*t) - 6/5*sin(9/8 - 5*t) - 23/7*sin(2/7 - 3*t) - 78/5*sin(23/22 - t) + 20/7*sin(2*t + 4/3) + 13/6*sin(4*t + 13/5) + 2/5*sin(6*t + 13/9) + 7/9*sin(8*t + 2) + 2/5*sin(10*t + 9/7) + 3/7*sin(11*t + 5/9) + 10511/18)*step(47*math.pi - t)*step(t - 43*math.pi) + (-2/5*sin(3/5 - 12*t) - 6/7*sin(3/7 - 6*t) - 21/4*sin(8/7 - 5*t) - 51/7*sin(12/11 - 2*t) + 1061/8*sin(t + 32/9) + 53/4*sin(3*t + 7/5) + 1/2*sin(4*t + 13/7) + 13/4*sin(7*t + 31/10) + 5/9*sin(8*t + 11/3) + 3/2*sin(9*t + 1) + 3/5*sin(10*t + 12/13) + 11/10*sin(11*t + 9/2) + 3049/12)*step(43*math.pi - t)*step(t - 39*math.pi) + (-1/3*sin(6/5 - 12*t) - 3/7*sin(6/7 - 10*t) - 2/3*sin(3/5 - 8*t) - 6/5*sin(2/7 - 6*t) + 395/3*sin(t + 13/3) + 35/9*sin(2*t + 45/11) + 53/4*sin(3*t + 25/7) + 5/3*sin(4*t + 1/5) + 31/6*sin(5*t + 29/10) + 3*sin(7*t + 9/4) + 10/7*sin(9*t + 8/5) + 2/3*sin(11*t + 6/7) + 1444/5)*step(39*math.pi - t)*step(t - 35*math.pi) + (-5/6*sin(3/5 - 12*t) - 2/9*sin(5/4 - 11*t) - 3/2*sin(4/5 - 6*t) - 19/8*sin(24/23 - 5*t) - 7/6*sin(1 - 4*t) - 94/9*sin(3/5 - 2*t) + 901/7*sin(t + 18/5) + 65/7*sin(3*t + 7/5) + 49/24*sin(7*t + 37/12) + 21/22*sin(8*t + 17/5) + 5/9*sin(9*t + 12/11) + 15/16*sin(10*t + 8/9) + 965/4)*step(35*math.pi - t)*step(t - 31*math.pi) + (1539/10*sin(t + 13/8) + 32/7*sin(2*t + 11/7) + 69/5*sin(3*t + 9/5) + 26/9*sin(4*t + 11/7) + 17/4*sin(5*t + 43/22) + 4/3*sin(6*t + 8/5) + 16/7*sin(7*t + 33/16) + 1/2*sin(8*t + 9/5) + 13/9*sin(9*t + 25/12) + 2/7*sin(10*t + 11/5) + 7/8*sin(11*t + 15/7) + 1/4*sin(12*t + 19/8) - 1132/3)*step(31*math.pi - t)*step(t - 27*math.pi) + (-2/5*sin(1/5 - 12*t) - sin(5/4 - 11*t) - 11/7*sin(1/6 - 9*t) + 484/3*sin(t + 25/6) + 8/3*sin(2*t + 8/5) + 137/8*sin(3*t + 40/13) + 2/3*sin(4*t + 11/12) + 49/9*sin(5*t + 13/6) + 3/8*sin(6*t + 12/7) + 33/16*sin(7*t + 5/4) + 2/5*sin(8*t + 1/16) + 5/7*sin(10*t + 1/6) - 37/4)*step(27*math.pi - t)*step(t - 23*math.pi) + (-6/5*sin(2/7 - 12*t) - 11/7*sin(7/5 - 9*t) - 5/3*sin(5/4 - 6*t) - 6/7*sin(5/4 - 4*t) + 2363/12*sin(t + 18/7) + 93/7*sin(2*t + 3/4) + 93/11*sin(3*t + 33/7) + 31/8*sin(5*t + 1) + 25/7*sin(7*t + 11/4) + 8/5*sin(8*t + 2/5) + 11/12*sin(10*t + 81/20) + 6/7*sin(11*t + 11/8) - 3187/10)*step(23*math.pi - t)*step(t - 19*math.pi) + (-13/14*sin(1/5 - 11*t) - 11/7*sin(2/3 - 9*t) - 8/3*sin(1 - 7*t) - 37/8*sin(9/8 - 5*t) - 83/5*sin(4/3 - 3*t) - 1591/7*sin(3/2 - t) + 4/5*sin(2*t + 19/5) + 4/5*sin(4*t + 19/5) + 3/5*sin(6*t + 21/5) + 6/13*sin(8*t + 23/5) + 2/5*sin(10*t + 9/2) + 2/7*sin(12*t + 41/9) - 73/5)*step(19*math.pi - t)*step(t - 15*math.pi) + (-6*sin(1 - 7*t) - 31/2*sin(11/10 - 5*t) - 211/21*sin(9/7 - 3*t) + 1012/5*sin(t + 5/3) + 6*sin(2*t + 1/30) + 43/5*sin(4*t + 4/9) + 91/10*sin(6*t + 5/11) + 85/14*sin(8*t + 4/5) + 3/5*sin(9*t + 16/5) + 22/7*sin(10*t + 6/7) + 1/3*sin(11*t + 55/27) + 9/8*sin(12*t + 6/5) - 45/4)*step(15*math.pi - t)*step(t - 11*math.pi) + (-31/7*sin(7/6 - 10*t) - 15/2*sin(4/3 - 9*t) - 616/9*sin(13/9 - 3*t) - 667/7*sin(2/5 - 2*t) + 1553/9*sin(t + 18/5) + 100/7*sin(4*t + 9/2) + 93/5*sin(5*t + 21/8) + 83/6*sin(6*t + 9/2) + 22/3*sin(7*t + 1/4) + 11/2*sin(8*t + 12/7) + 16/7*sin(11*t + 3) + 16/17*sin(12*t + 9/2) - 99/4)*step(11*math.pi - t)*step(t - 7*math.pi) + (-9/4*sin(3/2 - 18*t) - 51/13*sin(1/8 - 9*t) - 177/7*sin(13/14 - 4*t) + 29/5*sin(13*t) + 718*sin(t + 16/5) + 797/8*sin(2*t + 37/8) + 192/5*sin(3*t + 11/4) + 130/7*sin(5*t + 47/10) + 122/5*sin(6*t + 23/8) + 73/7*sin(7*t + 9/4) + 177/22*sin(8*t + 17/9) + 23/12*sin(10*t + 12/5) + 31/9*sin(11*t + 6/5) + 3*sin(12*t + 5/4) + 5*sin(14*t + 81/20) + 35/18*sin(15*t + 12/5) + 14/9*sin(16*t + 9/7) + 14/5*sin(17*t + 2/5) + 15/7*sin(19*t + 50/11) - 831/4)*step(7*math.pi - t)*step(t - 3*math.pi) + (-7/2*sin(1 - 18*t) + 815/9*sin(2*t) + 3969/5*sin(t + 19/6) + 831/8*sin(3*t + 23/7) + 424/9*sin(4*t + 24/7) + 317/8*sin(5*t + 23/7) + 146/9*sin(6*t + 3) + 101/7*sin(7*t + 2/7) + 169/10*sin(8*t + 3/7) + 17/3*sin(9*t + 9/7) + 34/7*sin(10*t + 1) + 11/3*sin(11*t + 22/5) + 115/8*sin(12*t + 22/5) + 47/7*sin(13*t + 17/4) + 27/5*sin(14*t + 14/13) + 8*sin(15*t + 7/5) + 177/22*sin(16*t + 3/2) + 13/3*sin(17*t + 15/14) + 32/7*sin(19*t + 50/11) + 19/7*sin(20*t + 37/10) - 942/7)*step(3*math.pi - t)*step(t + math.pi))*step(sqrt(sgn(sin(t/2))))

def y(t):
    return ((-1/5*sin(1/3 - 12*t) - 4/7*sin(1/7 - 8*t) - 2/7*sin(1/3 - 6*t) - 26/17*sin(1 - 3*t) - 19/5*sin(1/28 - 2*t) + 107/7*sin(t + 30/7) + 9/10*sin(4*t + 1/3) + 6/5*sin(5*t + 2/5) + 3/10*sin(7*t + 3/2) + 1/2*sin(9*t + 18/5) + 1/5*sin(10*t + 1/15) + 1/5*sin(11*t + 11/6) + 6611/13)*step(147*math.pi - t)*step(t - 143*math.pi) + (-1/11*sin(3/4 - 10*t) - 6/7*sin(1/5 - 6*t) - 5/6*sin(6/5 - 4*t) + 151/10*sin(t + 26/7) + 2/5*sin(2*t + 41/9) + 23/9*sin(3*t + 19/5) + sin(5*t + 21/5) + 3/4*sin(7*t + 45/11) + 1/2*sin(8*t + 8/9) + 1/4*sin(9*t + 19/7) + 1/2*sin(11*t + 4) + 1/4*sin(12*t + 5/8) - 3/8)*step(143*math.pi - t)*step(t - 139*math.pi) + (-1/17*sin(7/5 - 12*t) - 1/9*sin(5/9 - 10*t) - 3/8*sin(1/23 - 8*t) + 631/15*sin(t + 22/5) + 19/18*sin(2*t + 8/5) + 43/10*sin(3*t + 19/5) + 4/9*sin(4*t + 20/19) + 5/4*sin(5*t + 31/9) + 1/2*sin(6*t + 1/10) + 2/7*sin(7*t + 27/8) + 1/6*sin(9*t + 11/3) + 2/7*sin(11*t + 27/7) - 2567/6)*step(139*math.pi - t)*step(t - 135*math.pi) + (-4/7*sin(11/7 - 7*t) - 3/7*sin(4/5 - 6*t) - 1/6*sin(4/7 - 4*t) + 71/4*sin(t + 39/10) + 14/5*sin(2*t + 11/6) + 18/5*sin(3*t + 41/10) + 7/5*sin(5*t + 25/6) + 1/7*sin(8*t + 30/7) + 1/6*sin(9*t + 11/7) + 1/4*sin(10*t + 6/11) + 3/5*sin(11*t + 39/10) + 1/21*sin(12*t + 12/11) - 2115/8)*step(135*math.pi - t)*step(t - 131*math.pi) + (-6/13*sin(10/11 - 8*t) + 449/18*sin(t + 14/3) + 13/12*sin(2*t + 11/4) + 17/5*sin(3*t + 15/4) + 1/4*sin(4*t + 1) + 7/6*sin(5*t + 38/13) + 2/7*sin(6*t + 13/4) + 1/5*sin(7*t + 4/5) + 1/9*sin(9*t + 23/10) + 1/8*sin(10*t + 34/9) + 1/30*sin(11*t + 1/6) + 1/9*sin(12*t + 1/7) + 4157/8)*step(131*math.pi - t)*step(t - 127*math.pi) + (-1/5*sin(4/7 - 6*t) - 2/7*sin(2/3 - 5*t) + 189/5*sin(t + 17/4) + 5/7*sin(2*t + 42/41) + 5/7*sin(3*t + 27/8) + 1/2*sin(4*t + 1/7) + 2/9*sin(7*t + 9/5) + 1/21*sin(8*t + 1/6) + 2/7*sin(9*t + 17/5) + 1/5*sin(10*t + 10/11) + 3/5*sin(11*t + 23/8) + 1/4*sin(12*t + 2/7) - 2175/7)*step(127*math.pi - t)*step (t - 123*math.pi) + (551/12*sin(t + 49/11) + sin(2*t + 3/2) + 9/2*sin(3*t + 39/10) + 4/5*sin(4*t + 7/5) + 3/2*sin(5*t + 23/7) + 4/7*sin(6*t + 6/5) + 3/4*sin(7*t + 25/9) + 3/8*sin(8*t + 6/7) + 1/3*sin(9*t + 12/5) + 2/7*sin(10*t + 1/2) + 1/7*sin(11*t + 13/6) + 1/5*sin(12*t + 1/4) - 8170/21)*step(123*math.pi - t)*step(t - 119*math.pi) + (-1/13*sin(1/24 - 8*t) + 229/5*sin(t + 35/8) + 1/5*sin(2*t + 23/12) + 30/7*sin(3*t + 15/4) + 1/4*sin(4*t + 9/8) + 15/14*sin(5*t + 16/5) + 1/5*sin(6*t + 1/3) + 1/5*sin(7*t + 23/8) + 1/5*sin(9*t + 23/5) + 1/14*sin(10*t + 7/8) + 1/3*sin(11*t + 37/9) + 1/12*sin(12*t + 7/9) - 5304/5)*step(119*math.pi - t)*step(t - 115*math.pi) + (-2/5*sin(11/8 - 9*t) - 13/7*sin(19/13 - 5*t) - 16/3*sin(14/9 - 3*t) - 252/5*sin(11/7 - t) + 2/5*sin(6*t) + 23/11*sin(2*t + 1) + 5/8*sin(4*t + 1/28) + 4/5*sin(7*t + 23/5) + 1/7*sin(8*t + 11/7) + 1/4*sin(10*t + 2/7) + 2/7*sin(11*t + 29/9) + 2/5*sin(12*t + 8/5) - 14401/15)*step(115*math.pi - t)*step(t - 111*math.pi) + (-1/13*sin(4/3 - 9*t) + 31*sin(t + 13/3) + 17/6*sin(2*t + 11/7) + 31/7*sin(3*t + 4) + 4/5*sin(4*t + 41/20) + 9/5*sin(5*t + 31/8) + 1/2*sin(6*t + 11/4) + 5/4*sin(7*t + 26/7) + 3/7*sin(8*t + 21/8) + 4/7*sin(10*t + 10/9) + 1/2*sin(11*t + 11/3) + 2/5*sin(12*t + 11/10) - 5869/10)*step(111*math.pi - t)*step(t - 107*math.pi) + (-1/5*sin(1/3 - 12*t) - 149/10*sin(10/11 - t) + 16/7*sin(2*t + 1/6) + 51/13*sin(3*t + 30/7) + 15/14*sin(4*t + 23/7) + 2*sin(5*t + 29/9) + 18/17*sin(6*t + 7/6) + 5/7*sin(7*t + 22/9) + 5/7*sin(8*t + 1/12) + 1/6*sin(9*t + 6/7) + 2/7*sin(10*t + 17/5) + 1/13*sin(11*t + 7/8) + 627/4)*step(107*math.pi - t)*step(t - 103*math.pi) + (-5/3*sin(4/3 - 4*t) - 59/9*sin(14/9 - 2*t) + 261/5*sin(t + 41/9) + 7/2*sin(3*t + 11/3) + 13/6*sin(5*t + 19/5) + 3/5*sin(6*t + 5/4) + 11/9*sin(7*t + 181/45) + 2/5*sin(8*t + 5/3) + 3/7*sin(9*t + 18/5) + 1/7*sin(10*t + 9/10) + 3/10*sin(11*t + 10/3) + 2/9*sin(12*t + 9/8) + 423/7)*step(103*math.pi - t)*step(t - 99*math.pi) + (-2/9*sin(1/2 - 12*t) - 3/7*sin(3/5 - 10*t) - 97/5*sin(5/4 - t) + 116/23*sin(2*t + 3/5) + 14/3*sin(3*t + 37/9) + 20/21*sin(4*t + 7/5) + 8/7*sin(5*t + 23/7) + 3/4*sin(6*t + 3/4) + 1/2*sin(7*t + 83/41) + 1/3*sin(8*t + 9/7) + 1/26*sin(9*t + 13/7) + 4/9*sin(11*t + 6/11) + 1882/9)*step(99*math.pi - t)*step(t - 95*math.pi) + (-2/7*sin(2/7 - 10*t) + 265/4*sin(t + 41/9) + 1/5*sin(2*t + 5/7) + 50/7*sin(3*t + 17/4) + 1/6*sin(4*t + 27/11) + 11/5*sin(5*t + 37/9) + 3/10*sin(6*t + 11/7) + 23/24*sin(7*t + 4) + 1/4*sin(8*t + 14/15) + 5/9*sin(9*t + 11/3) + 3/4*sin(11*t + 25/6) + 1/7*sin(12*t + 3/5) - 9139/9)*step(95*math.pi - t)*step(t - 91*math.pi) + (-1/4*sin(1/35 - 10*t) - 1/3*sin(3/5 - 8*t) - 37/6*sin(3/2 - 3*t) - 951/14*sin(11/7 - t) + 4*sin(2*t + 4/3) + 11/10*sin(4*t + 15/16) + 18/7*sin(5*t + 9/2) + 1/4*sin(6*t + 1/6) + 4/3*sin(7*t + 9/2) + 4/5*sin(9*t + 9/2) + 4/7*sin(11*t + 30/7) + 1/6*sin(12*t + 3/2) - 7318/13)*step(91*math.pi - t)*step(t - 87*math.pi) + (-5/8*sin(5/6 - 9*t) - 2/3*sin(21/22 - 8*t) - 11/6*sin(14/9 - 5*t) - 17/16*sin(6/5 - 4*t) + 74/5*sin(t + 41/9) + 24/7*sin(2*t + 11/7) + 31/8*sin(3*t + 8/5) + 5/7*sin(6*t + 6/5) + 4/3*sin(7*t + 27/14) + 1/34*sin(10*t + 50/11) + 3/7*sin(11*t + 3) + 1/6*sin(12*t + 4/7) - 3466/5)*step(87*math.pi - t)*step(t - 83*math.pi) + (-9/7*sin(3/2 - 4*t) - 34/5*sin(10/7 - 2*t) + 221/8*sin(t + 17/4) + 26/5*sin(3*t + 26/7) + 17/7*sin(5*t + 26/7) + 1/4*sin(6*t + 15/4) + 7/4*sin(7*t + 37/10) + 3/7*sin(8*t + 7/6) + sin(9*t + 25/7) + 2/5*sin(10*t + 9/4) + 19/20*sin(11*t + 35/9) + 1/8*sin(12*t + 12/5) + 7263/16)*step(83*math.pi - t)*step(t - 79*math.pi) + (-1/5*sin(2/7 - 12*t) - 1/7*sin(3/2 - 10*t) - 55/14*sin(16/15 - 3*t) - 130/9*sin(5/8 - t) + 13/3*sin(2*t + 4/5) + 21/22*sin(4*t + 8/9) + 21/8*sin(5*t + 53/13) + 3/8*sin(6*t + 21/8) + 33/17*sin(7*t + 4) + 3/8*sin(8*t + 1/8) + 2/7*sin(9*t + 11/4) + 2/5*sin(11*t + 7/3) - 1379/5)*step(79*math.pi - t)*step(t - 75*math.pi) + (-1/7*sin(3/8 - 10*t) - 1/7*sin(3/2 - 8*t) + 655/8*sin(t + 33/7) + 47/16*sin(2*t + 13/3) + 64/7*sin(3*t + 14/3) + sin(4*t + 9/2) + 24/7*sin(5*t + 9/2) + 2/7*sin(6*t + 35/8) + 13/8*sin(7*t + 17/4) + 10/11*sin(9*t + 21/5) + 2/5*sin(11*t + 41/10) + 1/18*sin(12*t + 5/3) - 1651/6)*step(75*math.pi - t)*step(t - 71*math.pi) + (265/3*sin(t + 14/3) + 13/5*sin(2*t + 9/7) + 29/3*sin(3*t + 23/5) + 4/9*sin(4*t + 16/15) + 7/2*sin(5*t + 22/5) + 2/7*sin(6*t + 21/20) + 8/5*sin(7*t + 21/5) + 1/4*sin(8*t + 6/11) + sin(9*t + 30/7) + 1/4*sin(10*t + 8/5) + 5/7*sin(11*t + 26/7) + 1/3*sin(12*t + 2/3) - 3685/7)*step(71*math.pi - t)*step(t - 67*math.pi) + (829/9*sin(t + 32/7) + 13/4*sin(2*t + 32/7) + 58/7*sin(3*t + 21/5) + 9/8*sin(4*t + 30/7) + 34/11*sin(5*t + 87/22) + 2/7*sin(6*t + 8/3) + 13/8*sin(7*t + 23/6) + 1/3*sin(8*t + 2) + 8/9*sin(9*t + 29/8) + 1/3*sin(10*t + 5/3) + 4/7*sin(11*t + 25/7) + 3/8*sin(12*t + 10/7) - 2696/9)*step(67*math.pi - t)*step(t - 63*math.pi) + (545/6*sin(t + 13/3) + 7/4*sin(2*t + 13/7) + 33/8*sin(3*t + 39/10) + 23/8*sin(4*t + 28/11) + 29/14*sin(5*t + 15/4) + 11/6*sin(6*t + 9/5) + 11/10*sin(7*t + 13/4) + 5/8*sin(8*t + 6/5) + 1/3*sin(9*t + 23/9) + 5/9*sin(10*t + 7/5) + 1/6*sin(11*t + 17/5) + 1/2*sin(12*t + 6/5) - 416/5)*step(63*math.pi - t)*step(t - 59*math.pi) + (-1/2*sin(1/4 - 11*t) + 1/6*sin(8*t) + 467/12*sin(t + 9/2) + 85/9*sin(2*t + 25/7) + 139/23*sin(3*t + 47/12) + 8/7*sin(4*t + 5/2) + 11/5*sin(5*t + 11/4) + 5/8*sin(6*t + 13/9) + 7/5*sin(7*t + 2) + 15/14*sin(9*t + 10/9) + 1/15*sin(10*t + 1/10) + 2/5*sin(12*t + 5/4) + 2483/5)*step(59*math.pi - t)*step(t - 55*math.pi) + (653/7*sin(t + 14/3) + 12*sin(2*t + 5/3) + 26/3*sin(3*t + 31/7) + 13/8*sin(4*t + 17/9) + 13/4*sin(5*t + 35/8) + sin(6*t + 13/8) + 13/7*sin(7*t + 13/3) + 2/7*sin(8*t + 9/5) + sin(9*t + 21/5) + 1/5*sin(10*t + 9/7) + 5/6*sin(11*t + 13/3) + 1/29*sin(12*t + 9/4) - 2721/5)*step(55*math.pi - t)*step(t - 51*math.pi) + (-4/9*sin(5/6 - 9*t) - 1/2*sin(11/8 - 6*t) - 99/20*sin(10/7 - 5*t) - 57/2*sin(18/17 - t) + 79/7*sin(2*t + 8/5) + 41/8*sin(3*t + 27/8) + 11/5*sin(4*t + 23/5) + 11/6*sin(7*t + 11/6) + 5/8*sin(8*t + 5/7) + 2/9*sin(10*t + 7/4) + 8/9*sin(11*t + 9/5) + 1/5*sin(12*t + 13/3) + 808/7)*step(51*math.pi - t)*step(t - 47*math.pi) + (-1/15*sin(5/7 - 10*t) - 1/3*sin(2/3 - 4*t) - 8/7*sin(7/8 - 2*t) + 128*sin(t + 14/3) + 14*sin(3*t + 32/7) + 111/22*sin(5*t + 9/2) + 1/10*sin(6*t + 40/9) + 28/11*sin(7*t + 9/2) + 1/6*sin(8*t + 59/15) + 13/9*sin(9*t + 22/5) + 8/7*sin(11*t + 13/3) + 1/12*sin(12*t + 8/5) + 66/7)*step(47*math.pi - t)*step(t - 43*math.pi) + (-4/9*sin(1/6 - 8*t) - 16/17*sin(11/9 - 7*t) + 243/5*sin(t + 21/5) + 166/15*sin(2*t + 11/5) + 43/11*sin(3*t + 4/3) + 109/27*sin(4*t + 4/5) + 26/7*sin(5*t + 2/3) + 4/5*sin(6*t + 1) + 3/5*sin(9*t + 20/7) + 1/6*sin(10*t + 25/6) + 2/5*sin(11*t + 2/5) + 1/3*sin(12*t + 10/11) + 1086/7)*step(43*math.pi - t)*step(t - 39*math.pi) + (-5/8*sin(10/9 - 6*t) - 29/8*sin(11/8 - 5*t) - 23/4*sin(4/5 - 3*t) - 209/6*sin(3/2 - t) + 31/8*sin(4*t) + 323/14*sin(2*t + 5/6) + 7/3*sin(7*t + 25/6) + 1/4*sin(8*t + 8/5) + 7/6*sin(9*t + 13/4) + 3/10*sin(10*t + 13/8) + 20/19*sin(11*t + 18/7) + 1/9*sin(12*t + 14/5) + 341/6)*step(39*math.pi - t)*step(t - 35*math.pi) + (-5/6*sin(1/10 - 11*t) - 19/10*sin(4/3 - 7*t) + 400/7*sin(t + 57/14) + 628/19*sin(2*t + 7/3) + 62/5*sin(3*t + 70/23) + 29/4*sin(4*t + 1/5) + 26/7*sin(5*t + 7/13) + 5/4*sin(6*t + 22/5) + 4/9*sin(8*t + 11/5) + 9/8*sin(9*t + 5/2) + 3/7*sin(10*t + 15/7) + 2/5*sin(12*t + 11/6) + 3329/9)*step(35*math.pi - t)*step(t - 31*math.pi) + (281/11*sin(t + 25/6) + 149/9*sin(2*t + 5/3) + 52/9*sin(3*t + 18/5) + 35/4*sin(4*t + 7/4) + 33/8*sin(5*t + 23/6) + 26/7*sin(6*t + 12/7) + 20/9*sin(7*t + 18/5) + 9/7*sin(8*t + 17/8) + 9/8*sin(9*t + 7/2) + 5/9*sin(10*t + 5/4) + 21/22*sin(11*t + 43/11) + 3/8*sin(12*t + 11/5) + 283/8)*step(31*math.pi - t)*step(t - 27*math.pi) + (-5/7*sin(2/3 - 12*t) - 275/8*sin(4/5 - t) + 23/6*sin(2*t + 24/7) + 32/3*sin(3*t + 32/7) + 22/9*sin(4*t + 4/3) + 3/2*sin(5*t + 23/8) + 15/8*sin(6*t + 7/8) + 4/7*sin(7*t + 4/5) + 4/3*sin(8*t + 5/6) + 12/7*sin(9*t + 21/10) + 1/6*sin(10*t + 13/4) + 2/3*sin(11*t + 13/4) - 2242/5)*step(27*math.pi - t)*step(t - 23*math.pi) + (-11/5*sin(1/3 - 9*t) - 9/7*sin(2/7 - 8*t) - 89/7*sin(5/6 - 3*t) - 516/7*sin(8/7 - t) + 71*sin(2*t + 1/2) + 101/7*sin(4*t + 9/4) + 53/8*sin(5*t + 11/5) + 9/5*sin(6*t + 38/9) + 32/7*sin(7*t + 37/9) + 10/9*sin(10*t + 3/4) + 4/3*sin(11*t + 4/3) + 1/7*sin(12*t + 44/15) + 571/2)*step(23*math.pi - t)*step(t - 19*math.pi) + (146/7*sin(t + 4) + 107/4*sin(2*t + 12/7) + 43/7*sin(3*t + 27/8) + 173/8*sin(4*t + 9/5) + 54/11*sin(5*t + 32/11) + 7/5*sin(6*t + 2) + 24/7*sin(7*t + 25/6) + 10/3*sin(8*t + 29/15) + 27/14*sin(9*t + 26/7) + 7/5*sin(10*t + 21/10) + 7/5*sin(11*t + 63/16) + 11/10*sin(12*t + 21/11) - 3287/6)*step(19*math.pi - t)*step(t - 15*math.pi) + (-5/7*sin(5/6 - 9*t) - 14/5*sin(3/4 - 8*t) + 69/4*sin(t + 17/5) + 485/6*sin(2*t + 7/4) + 9*sin(3*t + 15/4) + 111/8*sin(4*t + 11/6) + 65/11*sin(5*t + 31/9) + 35/3*sin(6*t + 13/6) + 12/5*sin(7*t + 17/5) + 2*sin(10*t + 27/10) + 6/7*sin(11*t + 18/5) + 3/7*sin(12*t + 9/4) - 1523/7)*step(15*math.pi - t)*step(t - 11*math.pi) + (-5/4*sin(10/9 - 8*t) - 37/5*sin(4/9 - 5*t) - 31/2*sin(1/2 - 3*t) - 943/16*sin(19/20 - t) + 77/5*sin(6*t) + 462/13*sin(2*t + 2/7) + 87/8*sin(4*t + 17/5) + 109/18*sin(7*t + 25/8) + 37/19*sin(9*t + 1) + 3*sin(10*t + 9/2) + 18/19*sin(11*t + 2/5) + 8/5*sin(12*t + 19/9) - 3357/8)*step(11*math.pi - t)*step(t - 7*math.pi) + (-13/3*sin(1/11 - 19*t) - 29/6*sin(19/18 - 13*t) - 246/7*sin(9/7 - 6*t) - 939/14*sin(17/11 - 3*t) - 8995/13*sin(3/2 - t) + 999/5*sin(2*t + 1/14) + 329/9*sin(4*t + 3) + 290/7*sin(5*t + 3/4) + 149/5*sin(7*t + 55/14) + 91/3*sin(8*t + 12/5) + 167/14*sin(9*t + 9/7) + 69/10*sin(10*t + 1/4) + 42/5*sin(11*t + 27/8) + 33/5*sin(12*t + 5/7) + 47/9*sin(14*t + 9/2) + 51/13*sin(15*t + 7/2) + 18/5*sin(16*t + 27/11) + 85/42*sin(17*t + 11/5) + 40/7*sin(18*t + 4/3) - 251/4)*step(7*math.pi - t)*step(t - 3*math.pi) + (-2/3*sin(1/2 - 19*t) - 117/10*sin(1/4 - 11*t) - 266/13*sin(7/10 - 10*t) - 139/5*sin(1 - 9*t) - 126/5*sin(12/13 - 8*t) - 339/20*sin(14/13 - 7*t) - 1085*sin(3/2 - t) + 237/34*sin(12*t) + 1094/7*sin(2*t + 3/2) + 1151/24*sin(3*t + 11/6) + 610/11*sin(4*t + 2) + 228/7*sin(5*t + 37/18) + 15/7*sin(6*t + 13/12) + 13/5*sin(13*t + 19/7) + 10*sin(14*t + 11/4) + 67/7*sin(15*t + 13/5) + 51/10*sin(16*t + 12/5) + 14/9*sin(17*t + 11/5) + 3/2*sin(18*t + 17/7) + 11/7*sin(20*t + 23/8) - 59/6)*step(3*math.pi - t)*step(t + math.pi))*step(sqrt(sgn(sin(t/2))))

def dist(x, y):
    return math.sqrt((x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2)

limits = [0, int(148 * math.pi * 10)]

div_const = 4

turtle.penup()
turtle.setposition(x(0) / div_const, y(0) / div_const)
turtle.pendown()

last_pos = (x(0) / div_const, y(0) / div_const)

for i in range(*limits):
    i /= 10
    print(i)
    try:
        if dist(last_pos, (x(i) / div_const, y(i) / div_const)) > 50:
            turtle.penup()
        turtle.setposition(x(i)/div_const, y(i)/div_const)
        if dist(last_pos, (x(i) / div_const, y(i) / div_const)) > 50:
            turtle.pendown()
        last_pos = (x(i) / div_const, y(i) / div_const)
    except:
        print("error")
        pass

turtle.exitonclick()