from math import sin
import math
from math import sqrt
import turtle

turtle.speed(100000000)
turtle.shape("turtle")

def sgn(t):
    return t / abs(t) if 0.1 < t or -0.1 > t else 0

def step(t):
    return int(t >= 0)

def x(t):
    return ((-10/7*sin(12/11 - 68*t) - 11/13*sin(14/9 - 66*t) - 5/3*sin(13/11 - 64*t) - 7/10*sin(5/8 - 63*t) - 7/9*sin(5/8 - 62*t) - 19/14*sin(5/4 - 61*t) - 21/11*sin(1 - 57*t) - 7/6*sin(50/51 - 56*t) - 7/12*sin(9/8 - 53*t) - 4/13*sin(2/3 - 52*t) - 5/8*sin(4/7 - 49*t) - 46/13*sin(4/3 - 48*t) - 85/43*sin(19/14 - 46*t) - 5/11*sin(5/7 - 45*t) - 10/7*sin(13/10 - 42*t) - 27/10*sin(16/15 - 41*t) - 10/13*sin(14/9 - 36*t) - 13/10*sin(1 - 35*t) - 121/61*sin(7/6 - 34*t) - 98/9*sin(10/7 - 31*t) - 5/2*sin(7/12 - 30*t) - 101/11*sin(11/8 - 29*t) - 9/5*sin(7/10 - 28*t) - 148/21*sin(4/3 - 27*t) - 17/4*sin(11/7 - 21*t) - 65/9*sin(10/7 - 18*t) - 67/9*sin(13/9 - 16*t) - 181/16*sin(3/2 - 10*t) - 773/12*sin(3/2 - 7*t) - 4523/38*sin(26/17 - 6*t) - 901/11*sin(11/7 - 4*t) - 1825/8*sin(14/9 - 2*t) - 275/7*sin(20/13 - t) + 236/7*sin(3*t + 20/13) + 940/19*sin(5*t + 11/7) + 620/27*sin(8*t + 21/13) + 24/7*sin(9*t + 23/13) + 97/7*sin(11*t + 18/11) + 59/7*sin(12*t + 12/7) + 53/3*sin(13*t + 12/7) + 139/6*sin(14*t + 17/10) + 33/10*sin(15*t + 14/3) + 42/17*sin(17*t + 13/9) + 3/5*sin(19*t + 49/11) + 97/10*sin(20*t + 12/7) + 48/5*sin(22*t + 9/5) + 98/5*sin(23*t + 23/13) + 13/4*sin(24*t + 24/11) + 197/22*sin(25*t + 7/4) + 4/11*sin(26*t + 33/17) + 91/8*sin(32*t + 7/4) + 8/7*sin(33*t + 41/10) + 20/7*sin(37*t + 12/7) + 6/5*sin(38*t + 40/9) + 49/11*sin(39*t + 13/7) + 5/12*sin(40*t + 61/14) + 19/4*sin(43*t + 51/26) + 187/93*sin(44*t + 20/9) + 37/12*sin(47*t + 17/10) + 4/7*sin(50*t + 19/8) + 7/5*sin(51*t + 99/49) + 41/27*sin(54*t + 16/7) + 8/5*sin(55*t + 33/16) + 7/13*sin(58*t + 26/17) + 20/19*sin(59*t + 21/8) + 19/8*sin(60*t + 61/30) + 22/21*sin(65*t + 9/5) + 5/9*sin(67*t + 10/13) + 1/6*sin(69*t + 13/10) - 738/11)*step(83*math.pi - t)*step(t - 79*math.pi) + (-206/23*sin(14/9 - 51*t) - 253/18*sin(23/15 - 49*t) - 209/14*sin(17/11 - 47*t) - 11/9*sin(32/21 - 46*t) - 51/19*sin(3/2 - 30*t) - 24/11*sin(10/7 - 29*t) - 52/21*sin(11/8 - 25*t) - 19/4*sin(3/2 - 24*t) - 31/9*sin(26/17 - 23*t) - 188/25*sin(19/14 - 21*t) - 225/7*sin(17/11 - 19*t) - 1947/14*sin(17/11 - 17*t) - 7/2*sin(1/3 - 16*t) - 3687/11*sin(14/9 - 15*t) - 213/8*sin(14/9 - 11*t) - 8/11*sin(13/11 - 6*t) + 127/13*sin(t + 13/9) + 87/5*sin(2*t + 26/17) + 68/7*sin(3*t + 21/13) + 110/7*sin(4*t + 14/3) + 103/12*sin(5*t + 14/9) + 233/26*sin(7*t + 8/5) + 79/13*sin(8*t + 11/7) + 196/23*sin(9*t + 19/13) + 33/5*sin(10*t + 16/9) + 43/11*sin(12*t + 51/11) + 2293/13*sin(13*t + 11/7) + 80/23*sin(14*t + 4/5) + 18/5*sin(18*t + 3/8) + 14/9*sin(20*t + 16/11) + 27/11*sin(22*t + 47/10) + 5/9*sin(26*t + 32/9) + 8/5*sin(27*t + 95/21) + 55/9*sin(28*t + 8/5) + 4/3*sin(31*t + 79/17) + 13/5*sin(32*t + 60/13) + 12/5*sin(33*t + 60/13) + 5/7*sin(34*t + 68/15) + 3/5*sin(35*t + 22/13) + 3/5*sin(36*t + 4) + 39/10*sin(37*t + 32/7) + 5/7*sin(38*t + 75/16) + 79/9*sin(39*t + 11/7) + 22/21*sin(40*t + 11/6) + 201/13*sin(41*t + 47/10) + 3/10*sin(42*t + 147/37) + 263/13*sin(43*t + 8/5) + 5/4*sin(44*t + 13/7) + 4/13*sin(45*t + 21/13) + 13/8*sin(48*t + 16/15) + 7/6*sin(50*t + 10/19) + 9679/12)*step(79*math.pi - t)*step(t - 75*math.pi) + (-184/15*sin(11/7 - 2*t) + 21/10*sin(t + 33/7) + 167/24*sin(3*t + 11/7) + 4/7*sin(4*t + 14/9) + 33/20*sin(5*t + 11/7) + 11/9*sin(6*t + 11/7) + 15/8*sin(7*t + 11/7) + 3/11*sin(8*t + 14/9) + 8/9*sin(9*t + 11/7) + 1/7*sin(10*t + 11/7) + 1/22*sin(11*t + 14/3) + 6/13*sin(12*t + 33/7) - 3327/7)*step(75*math.pi - t)*step(t - 71*math.pi) + (-3/8*sin(14/9 - 12*t) - 3/10*sin(14/9 - 11*t) - 2/9*sin(14/9 - 10*t) - 7/9*sin(14/9 - 9*t) - 1/7*sin(11/7 - 8*t) - 13/14*sin(14/9 - 7*t) - 4/7*sin(11/7 - 6*t) - 5/13*sin(11/7 - 4*t) - 29/8*sin(11/7 - 3*t) - 64/11*sin(11/7 - 2*t) + 223/9*sin(t + 11/7) + 1/24*sin(5*t + 19/12) - 7464/17)*step(71*math.pi - t)*step(t - 67*math.pi) + (-1/4*sin(13/9 - 12*t) - 3/11*sin(9/8 - 11*t) - 3/13*sin(3/4 - 7*t) + 604/9*sin(t + 14/9) + 13/8*sin(2*t + 6/7) + 50/7*sin(3*t + 32/21) + 13/7*sin(4*t + 79/17) + 11/12*sin(5*t + 13/8) + 17/11*sin(6*t + 16/11) + 7/9*sin(8*t + 37/8) + 4/15*sin(9*t + 13/6) + 5/12*sin(10*t + 8/5) - 3679/8)*step(67*math.pi - t)*step(t - 63*math.pi) + (-21/10*sin(11/7 - 6*t) - 1/7*sin(14/9 - 4*t) - 465/16*sin(11/7 - 2*t) + 94/5*sin(t + 11/7) + 3/5*sin(3*t + 32/21) + 14/9*sin(5*t + 14/9) + 24/25*sin(7*t + 11/7) - 6967/10)*step(63*math.pi - t)*step(t - 59*math.pi) + (-5/9*sin(11/7 - 5*t) - 5/9*sin(3/2 - 3*t) + 91/17*sin(t + 11/7) + 271/7*sin(2*t + 11/7) + 44/9*sin(4*t + 11/7) + 7/4*sin(6*t + 11/7) + 7/11*sin(7*t + 11/7) - 1192/7)*step(59*math.pi - t)*step(t - 55*math.pi) + (386/11*sin(t + 8/13) + 25/8*sin(2*t + 51/50) + 121/30*sin(3*t + 43/12) + 37/16*sin(4*t + 1/4) - 5639/9)*step(55*math.pi - t)*step(t - 51*math.pi) + (-11/12*sin(12/13 - 3*t) + 645/16*sin(t + 11/9) + 45/17*sin(2*t + 41/10) + 15/11*sin(4*t + 38/11) + 2/11*sin(5*t + 1/10) + 3/8*sin(6*t + 52/17) - 2999/11)*step(51*math.pi - t)*step(t - 47*math.pi) + (-11/4*sin(3/11 - 12*t) + 1181/59*sin(t + 5/11) + 199/10*sin(2*t + 12/5) + 59/3*sin(3*t + 43/10) + 101/8*sin(4*t + 1/11) + 30/13*sin(5*t + 1/8) + 42/11*sin(6*t + 15/8) + 53/10*sin(7*t + 11/8) + 35/8*sin(8*t + 41/10) + 76/9*sin(9*t + 29/12) + 14/5*sin(10*t + 11/8) + 17/7*sin(11*t + 10/7) - 5441/9)*step(47*math.pi - t)*step(t - 43*math.pi) + (-20/3*sin(10/9 - 6*t) + 287/12*sin(2*t) + 269/13*sin(t + 4) + 151/8*sin(3*t + 9/5) + 794/61*sin(4*t + 38/9) + 53/10*sin(5*t + 6/11) + 224/45*sin(7*t + 19/7) + 47/9*sin(8*t + 28/17) + 42/11*sin(9*t + 9/7) + 36/11*sin(10*t + 35/18) + 11/9*sin(11*t + 4/3) + 3/5*sin(12*t + 6/5) - 2837/8)*step(43*math.pi - t)*step(t - 39*math.pi) + (-2/11*sin(3/2 - 11*t) - 7/11*sin(7/5 - 9*t) - 9/14*sin(14/9 - 7*t) - 9/11*sin(2/5 - 5*t) + 526/17*sin(t + 47/11) + 53/6*sin(2*t + 37/15) + 13/6*sin(3*t + 137/34) + 19/8*sin(4*t + 4/3) + 11/14*sin(6*t + 18/19) + 2/11*sin(8*t + 13/3) + 2/11*sin(10*t + 8/11) + 1/12*sin(12*t + 37/13) - 2903/4)*step(39*math.pi - t)*step(t - 35*math.pi) + (211/8*sin(t + 5/6) + 78/11*sin(2*t + 32/7) + 21/10*sin(3*t + 22/15) + 22/13*sin(4*t + 54/13) + 40/17*sin(5*t + 2/3) + 7/6*sin(6*t + 17/4) + 9/8*sin(7*t + 4/9) + 11/17*sin(8*t + 80/23) + 11/12*sin(9*t + 2/9) + 3/4*sin(10*t + 44/13) + 5/16*sin(11*t + 12/23) + 2/5*sin(12*t + 10/3) - 1584/5)*step(35*math.pi - t)*step(t - 31*math.pi) + (-9/8*sin(5/8 - 12*t) - 18/35*sin(23/22 - 8*t) - 147/11*sin(5/11 - 4*t) + 1398/5*sin(t + 62/25) + 220/13*sin(2*t + 2/9) + 303/14*sin(3*t + 40/13) + 39/4*sin(5*t + 26/7) + 76/9*sin(6*t + 11/17) + 49/16*sin(7*t + 53/14) + 4/7*sin(9*t + 5/6) + 26/15*sin(10*t + 9/19) + 2*sin(11*t + 25/8) - 4061/9)*step(31*math.pi - t)*step(t - 27*math.pi) + (-3/11*sin(28/29 - 11*t) - 3/10*sin(10/7 - 9*t) + (207*sin(t))/4 + 33/10*sin(2*t + 26/7) + 43/8*sin(3*t + 17/12) + 101/51*sin(4*t + 2/5) + 20/19*sin(5*t + 39/10) + 15/16*sin(6*t + 21/10) + 13/11*sin(7*t + 10/11) + 4/11*sin(8*t + 68/15) + 2/13*sin(10*t + 12/7) + 2/5*sin(12*t + 33/14) - 447)*step(27*math.pi - t)*step(t - 23*math.pi) + (-2/5*sin(4/5 - 12*t) - 1/6*sin(13/14 - 9*t) - 18/35*sin(2/7 - 8*t) - 13/9*sin(1/6 - 6*t) - 10/9*sin(37/25 - 4*t) - 376/5*sin(1/4 - t) + 7*sin(2*t + 1/29) + 67/8*sin(3*t + 16/9) + 20/7*sin(5*t + 8/3) + 40/27*sin(7*t + 41/12) + 1/10*sin(10*t + 17/5) + 5/6*sin(11*t + 30/11) - 1351/5)*step(23*math.pi - t)*step(t - 19*math.pi) + (-7/8*sin(14/11 - 7*t) + 795/11*sin(t + 23/9) + 25/4*sin(2*t + 38/9) + 33/5*sin(3*t + 38/9) + 19/18*sin(4*t + 12/11) + 4/5*sin(5*t + 67/15) + 11/15*sin(6*t + 12/7) + 9/13*sin(8*t + 283/94) + 2/7*sin(9*t + 1/63) + 4/9*sin(10*t + 5/2) + 3/7*sin(11*t + 11/14) + 1/4*sin(12*t + 23/8) + 981/13)*step(19*math.pi - t)*step(t - 15*math.pi) + (-2/7*sin(6/5 - 12*t) - 1/16*sin(5/14 - 11*t) - 6/17*sin(3/10 - 10*t) - sin(3/8 - 6*t) + 12/13*sin(8*t) + 977/9*sin(t + 30/11) + 9/10*sin(2*t + 27/8) + 105/8*sin(3*t + 47/10) + 27/10*sin(4*t + 34/35) + 9/14*sin(5*t + 4/9) + 21/13*sin(7*t + 55/18) + 6/7*sin(9*t + 20/7) + 3379/14)*step(15*math.pi - t)*step(t - 11*math.pi) + (-9/5*sin(1/20 - 6*t) - 3*sin(4/15 - 4*t) + 2848/17*sin(t + 20/11) + 57/13*sin(2*t + 1/5) + 351/19*sin(3*t + 23/10) + 47/13*sin(5*t + 14/5) + 41/42*sin(7*t + 24/11) + 3/7*sin(8*t + 2/3) + 1/3*sin(9*t + 52/17) + 6/11*sin(10*t + 1/61) + 19/20*sin(11*t + 29/15) + 2/5*sin(12*t + 85/19) + 6320/11)*step(11*math.pi - t)*step(t - 7*math.pi) + (-29/9*sin(4/9 - 20*t) - 4/3*sin(17/12 - 16*t) - 22/9*sin(2/9 - 15*t) - 37/9*sin(5/9 - 13*t) - 74/9*sin(6/5 - 11*t) - 221/11*sin(4/3 - 5*t) + 28/11*sin(9*t) + 3833/7*sin(t + 9/5) + 278/7*sin(2*t + 13/5) + 167/11*sin(3*t + 30/7) + 1483/38*sin(4*t + 28/29) + 495/26*sin(6*t + 17/16) + 91/11*sin(7*t + 34/9) + 47/5*sin(8*t + 17/14) + 67/10*sin(10*t + 1/10) + 40/9*sin(12*t + 17/7) + 18/5*sin(14*t + 25/9) + 15/13*sin(17*t + 39/10) + 7/5*sin(18*t + 22/13) + 5/3*sin(19*t + 8/7) + 33/10*sin(21*t + 30/7) - 1352/7)*step(7*math.pi - t)*step(t - 3*math.pi) + (-11/8*sin(11/9 - 20*t) - sin(9/8 - 17*t) - 31/11*sin(23/17 - 12*t) - 196/23*sin(5/4 - 8*t) - 163/9*sin(5/8 - 4*t) + 2171/6*sin(t + 9/5) + 1524/11*sin(2*t + 23/8) + 1011/13*sin(3*t + 5/9) + 26/5*sin(5*t + 11/3) + 116/7*sin(6*t + 18/11) + 81/11*sin(7*t + 6/17) + 19/7*sin(9*t + 43/22) + 23/15*sin(10*t + 3/10) + 41/7*sin(11*t + 5/6) + 4/3*sin(13*t + 51/14) + 16/9*sin(14*t + 13/6) + 29/30*sin(15*t + 4/11) + 1/8*sin(16*t + 44/13) + 12/7*sin(18*t + 47/12) + 7/5*sin(19*t + 10/9) + sin(21*t + 8/7) - 427/4)*step(3*math.pi - t)*step(t + math.pi))*step(sqrt(sgn(sin(t/2))))

def y(t):
    return ((-6/13*sin(11/8 - 68*t) - 4/15*sin(11/12 - 67*t) - 2/7*sin(2/11 - 66*t) - 17/13*sin(28/29 - 65*t) - 1/8*sin(7/10 - 64*t) - 14/9*sin(25/26 - 61*t) - 7/6*sin(13/12 - 60*t) - 9/7*sin(5/4 - 56*t) - 19/11*sin(11/8 - 53*t) - 20/9*sin(5/4 - 49*t) - 4/3*sin(11/9 - 39*t) - 7/9*sin(14/11 - 38*t) - 33/7*sin(13/9 - 36*t) - 53/35*sin(13/14 - 31*t) - 67/8*sin(4/3 - 30*t) - 23/8*sin(31/21 - 27*t) - 3/8*sin(2/7 - 26*t) - 128/17*sin(4/3 - 23*t) - 118/9*sin(18/13 - 22*t) - 37/8*sin(31/21 - 20*t) - 51/13*sin(13/9 - 19*t) - 74/9*sin(20/13 - 17*t) - 22/7*sin(5/4 - 15*t) - 389/16*sin(16/11 - 14*t) - 367/10*sin(3/2 - 11*t) - 29/12*sin(10/9 - 10*t) - 5/3*sin(10/7 - 7*t) - 109/2*sin(29/19 - 6*t) - 559/11*sin(3/2 - 5*t) - 383/7*sin(17/11 - 4*t) + 2231/24*sin(t + 33/7) + 1919/7*sin(2*t + 19/12) + 646/9*sin(3*t + 8/5) + 169/6*sin(8*t + 18/11) + 29/5*sin(9*t + 9/5) + 113/11*sin(12*t + 21/13) + 20/7*sin(13*t + 8/5) + 22/3*sin(16*t + 28/17) + 2*sin(18*t + 17/11) + 21/5*sin(21*t + 3/2) + 31/11*sin(24*t + 7/4) + 4/5*sin(25*t + 12/5) + 27/5*sin(28*t + 16/9) + 16/15*sin(29*t + 3/2) + 1/22*sin(32*t + 31/30) + 43/21*sin(33*t + 71/36) + 26/5*sin(34*t + 29/15) + 361/72*sin(35*t + 20/11) + 5/2*sin(37*t + 11/7) + 25/17*sin(40*t + 35/18) + 47/12*sin(41*t + 181/90) + 21/5*sin(42*t + 33/17) + 3/10*sin(43*t + 41/14) + 3/11*sin(44*t + 11/12) + 1/3*sin(45*t + 37/10) + 27/8*sin(46*t + 35/18) + 29/14*sin(47*t + 13/6) + 16/17*sin(48*t + 8/5) + 7/5*sin(50*t + 9/5) + 22/15*sin(51*t + 9/4) + 11/6*sin(52*t + 23/12) + sin(54*t + 23/14) + 1/5*sin(55*t + 11/7) + 4/5*sin(57*t + 28/19) + 48/49*sin(58*t + 40/9) + 33/16*sin(59*t + 25/13) + 3/7*sin(62*t + 55/27) + 11/9*sin(63*t + 29/13) + 6/11*sin(69*t + 23/12) - 2584/63)*step(83*math.pi - t)*step(t - 79*math.pi) + (-40/9*sin(35/23 - 45*t) - 31/8*sin(14/9 - 44*t) - 11/4*sin(10/7 - 42*t) - 61/9*sin(35/23 - 41*t) - 31/8*sin(17/11 - 40*t) - 13/4*sin(11/8 - 35*t) - 13/2*sin(3/2 - 34*t) - 8/15*sin(11/9 - 33*t) - 23/8*sin(16/11 - 25*t) - 23/10*sin(9/7 - 8*t) - 233/6*sin(11/7 - 6*t) - 12/5*sin(11/8 - 3*t) - 2341/5*sin(11/7 - 2*t) + 7/11*sin(t + 6/11) + 113/9*sin(4*t + 11/7) + 11/15*sin(5*t + 9/8) + 1/5*sin(7*t + 15/7) + 32/9*sin(9*t + 22/15) + 203/10*sin(10*t + 33/7) + 1090/33*sin(11*t + 33/7) + 37/11*sin(12*t + 23/15) + 693/10*sin(13*t + 11/7) + 128/9*sin(14*t + 33/7) + 251/6*sin(15*t + 33/7) + 31/9*sin(16*t + 22/13) + 251/5*sin(17*t + 11/7) + 11/7*sin(18*t + 30/7) + 241/14*sin(19*t + 21/13) + 131/14*sin(20*t + 21/13) + 441/88*sin(21*t + 11/7) + 40/7*sin(22*t + 47/10) + 73/21*sin(23*t + 23/5) + 119/8*sin(24*t + 19/12) + 527/44*sin(26*t + 33/7) + 11/5*sin(27*t + 15/8) + 29/3*sin(28*t + 13/8) + 43/8*sin(29*t + 5/3) + 409/11*sin(30*t + 8/5) + 36/11*sin(31*t + 11/6) + 43/7*sin(32*t + 61/13) + 101/13*sin(36*t + 33/7) + 20/13*sin(37*t + 11/7) + 10/11*sin(38*t + 18/17) + 26/17*sin(39*t + 4/3) + 59/9*sin(43*t + 11/7) + 37/18*sin(46*t + 15/11) + 15/8*sin(47*t + 61/13) + 29/7*sin(48*t + 61/13) + 43/10*sin(49*t + 8/5) + 85/19*sin(50*t + 23/14) + 55/8*sin(51*t + 19/12) - 656/11)*step(79*math.pi - t)*step(t - 75*math.pi) + (-4/7*sin(11/7 - 11*t) - 58/23*sin(11/7 - 5*t) - 12/7*sin(11/7 - t) + 17/4*sin(2*t + 11/7) + 76/11*sin(3*t + 11/7) + 1/4*sin(4*t + 14/9) + 3/7*sin(6*t + 11/7) + 3/5*sin(7*t + 11/7) + 1/17*sin(8*t + 14/9) + 4/9*sin(9*t + 11/7) + 1/5*sin(10*t + 33/7) + 1/7*sin(12*t + 11/7) - 8049/25)*step(75*math.pi - t)*step(t - 71*math.pi) + (-10/13*sin(11/7 - 9*t) - 16/17*sin(11/7 - 3*t) + 65/9*sin(t + 11/7) + 197/10*sin(2*t + 11/7) + 13/7*sin(4*t + 11/7) + 3/7*sin(5*t + 47/10) + 6/7*sin(6*t + 11/7) + 1/8*sin(7*t + 51/11) + 6/7*sin(8*t + 11/7) + 4/11*sin(10*t + 19/12) + 1/7*sin(11*t + 8/5) + 1/8*sin(12*t + 8/5) - 3099/8)*step(71*math.pi - t)*step(t - 67*math.pi) + (-6/13*sin(12/11 - 9*t) - 3/13*sin(7/9 - 7*t) - 4/11*sin(23/24 - 5*t) - 74/73*sin(9/8 - 3*t) + 561/28*sin(t + 14/9) + 49/8*sin(2*t + 3/2) + 54/7*sin(4*t + 20/13) + 12/13*sin(6*t + 18/13) + 8/3*sin(8*t + 3/2) + 7/9*sin(10*t + 15/11) + 2/9*sin(11*t + 8/7) + 7/13*sin(12*t + 13/9) - 3899/11)*step(67*math.pi - t)*step(t - 63*math.pi) + (-9/5*sin(14/9 - 6*t) - 20/7*sin(14/9 - 5*t) - 23/10*sin(14/9 - 4*t) - 158/7*sin(11/7 - 2*t) - 653/20*sin(11/7 - t) + 27/10*sin(3*t + 11/7) + 1/8*sin(7*t + 20/13) - 835/2)*step(63*math.pi - t)*step(t - 59*math.pi) + (-20/19*sin(11/7 - 5*t) - 16/11*sin(11/7 - 4*t) - 569/13*sin(11/7 - t) + 29/11*sin(2*t + 11/7) + 67/8*sin(3*t + 11/7) + 1/3*sin(6*t + 14/9) + 2/7*sin(7*t + 47/10) - 1809/7)*step(59*math.pi - t)*step(t - 55*math.pi) + (-369/10*sin(8/9 - t) + 19/5*sin(2*t + 4) + 12/7*sin(3*t + 1/17) + 48/19*sin(4*t + 37/9) - 2014/5)*step(55*math.pi - t)*step(t - 51*math.pi) + (-13/10*sin(1/13 - 3*t) - 409/10*sin(2/7 - t) + 8/7*sin(2*t + 17/4) + 12/13*sin(4*t + 12/5) + 2/5*sin(5*t + 11/5) + 10/21*sin(6*t + 31/10) - 3426/11)*step(51*math.pi - t)*step(t - 47*math.pi) + (-35/9*sin(25/26 - 8*t) - 235/12*sin(1/3 - 3*t) + 89/8*sin(t + 11/8) + 104/5*sin(2*t + 31/8) + 13*sin(4*t + 7/4) + 8/13*sin(5*t + 5/6) + 31/8*sin(6*t + 38/11) + 43/9*sin(7*t + 29/10) + 155/16*sin(9*t + 17/4) + 23/5*sin(10*t + 43/13) + 27/10*sin(11*t + 46/13) + 19/14*sin(12*t + 23/12) - 6763/23)*step(47*math.pi - t)*step(t - 43*math.pi) + (-68/11*sin(11/8 - 7*t) - 212/11*sin(4/7 - 4*t) - 39/5*sin(5/9 - t) + 16*sin(2*t + 13/7) + 133/6*sin(3*t + 67/19) + 101/13*sin(5*t + 16/7) + 213/17*sin(6*t + 11/13) + 191/19*sin(8*t + 41/12) + 85/12*sin(9*t + 33/10) + 91/16*sin(10*t + 52/17) + 24/11*sin(11*t + 11/3) + 19/11*sin(12*t + 19/5) - 2419/11)*step(43*math.pi - t)*step(t - 39*math.pi) + (-4/9*sin(22/15 - 11*t) - 295/12*sin(8/17 - t) + 80/11*sin(2*t + 8/11) + 13/9*sin(3*t + 27/10) + 19/11*sin(4*t + 22/7) + 8/9*sin(5*t + 38/9) + 10/19*sin(6*t + 3/7) + 2/3*sin(7*t + 1/4) + 5/13*sin(8*t + 3/4) + 3/7*sin(9*t + 32/7) + 12/23*sin(10*t + 23/5) + 1/31*sin(12*t + 21/16) - 1169/6)*step(39*math.pi - t)*step(t - 35*math.pi) + (-1/6*sin(7/12 - 10*t) - 3/10*sin(4/5 - 8*t) - 19/8*sin(22/21 - 4*t) - 83/28*sin(6/13 - 3*t) + 388/11*sin(t + 30/11) + 439/73*sin(2*t + 149/50) + 1/15*sin(5*t + 4/3) + 7/6*sin(6*t + 15/14) + 1/2*sin(7*t + 2) + 4/7*sin(9*t + 43/11) + 3/10*sin(11*t + 3/4) + 3/10*sin(12*t + 1/8) - 535/17)*step(35*math.pi - t)*step(t - 31*math.pi) + (-34/9*sin(5/6 - 8*t) - 72/13*sin(5/6 - 5*t) + 3051/13*sin(t + 35/9) + 237/17*sin(2*t + 13/3) + 149/7*sin(3*t + 5/7) + 225/28*sin(4*t + 40/11) + 43/9*sin(6*t + 8/9) + 49/9*sin(7*t + 62/21) + 9/5*sin(9*t + 21/8) + 22/9*sin(10*t + 1/3) + 19/6*sin(11*t + 25/7) + 15/7*sin(12*t + 2/7) - 3611/15)*step(31*math.pi - t)*step(t - 27*math.pi) + (-167/28*sin(1/2 - 2*t) - 523/8*sin(11/8 - t) + 21/8*sin(3*t + 31/7) + 51/19*sin(4*t + 1/14) + 9/5*sin(5*t + 31/8) + 25/17*sin(6*t + 6/11) + 17/12*sin(7*t + 63/16) + 10/13*sin(8*t + 9/17) + 25/24*sin(9*t + 48/13) + 7/8*sin(10*t + 3/7) + 2/3*sin(11*t + 38/9) + 3/7*sin(12*t + 2/3) - 1924/3)*step(27*math.pi - t)*step(t - 23*math.pi) + (-1/4*sin(3/10 - 12*t) - 2/7*sin(21/22 - 10*t) - 7/9*sin(7/10 - 7*t) - 82/9*sin(1/5 - 3*t) - 503/5*sin(16/13 - t) + 18/5*sin(2*t + 31/9) + 4/13*sin(4*t + 11/8) + 3/4*sin(5*t + 5/7) + 1/8*sin(6*t + 47/10) + 3/7*sin(8*t + 14/11) + 3/13*sin(9*t + 5/13) + 5/13*sin(11*t + 6/7) - 4373/7)*step(23*math.pi - t)*step(t - 19*math.pi) + (-9/13*sin(13/27 - 11*t) - 91/9*sin(2/3 - 3*t) - 510/7*sin(13/9 - t) + 309/44*sin(2*t + 26/7) + 9/5*sin(4*t + 35/13) + 13/9*sin(5*t + 4/9) + 34/33*sin(6*t + 40/13) + 1/28*sin(7*t + 23/6) + 6/7*sin(8*t + 37/10) + 4/9*sin(9*t + 23/5) + 1/9*sin(10*t + 11/5) + 1/2*sin(12*t + 23/12) - 16387/25)*step(19*math.pi - t)*step(t - 15*math.pi) + (-1/6*sin(11/7 - 12*t) - 2/5*sin(1 - 8*t) - 146/13*sin(5/12 - 3*t) - 551/7*sin(4/3 - t) + 32/7*sin(2*t + 19/5) + 3*sin(4*t + 7/6) + 15/8*sin(5*t + 22/9) + 5/16*sin(6*t + 51/13) + 21/16*sin(7*t + 47/11) + 9/13*sin(9*t + 47/48) + 1/9*sin(10*t + 1/8) + 4/15*sin(11*t + 2/3) - 4879/8)*step(15*math.pi - t)*step(t - 11*math.pi) + (-7/9*sin(8/9 - 11*t) - 20/13*sin(6/19 - 9*t) + 72*sin(t + 19/7) + 67/5*sin(2*t + 74/17) + 65/4*sin(3*t + 48/11) + 57/14*sin(4*t + 10/3) + 73/18*sin(5*t + 48/11) + 19/8*sin(6*t + 35/17) + 41/14*sin(7*t + 60/13) + 9/7*sin(8*t + 21/11) + 13/9*sin(10*t + 18/7) + 5/6*sin(12*t + 15/7) - 5063/13)*step(11*math.pi - t)*step(t - 7*math.pi) + (-22/9*sin(7/8 - 16*t) - 23/9*sin(10/7 - 15*t) - 82/9*sin(1/8 - 10*t) - 902/17*sin(11/9 - 2*t) + 15239/30*sin(t + 31/9) + 154/5*sin(3*t + 19/5) + 295/12*sin(4*t + 29/7) + 211/12*sin(5*t + 2/3) + 127/12*sin(6*t + 70/19) + 57/17*sin(7*t + 38/9) + 205/14*sin(8*t + 7/2) + 119/8*sin(9*t + 37/19) + 53/13*sin(11*t + 50/13) + 18/7*sin(12*t + 52/21) + 31/4*sin(13*t + 21/13) + 49/9*sin(14*t + 1/20) + 19/7*sin(17*t + 47/11) + 7/5*sin(18*t + 33/16) + 1/6*sin(19*t + 37/10) + 16/13*sin(20*t + 41/12) + 22/13*sin(21*t + 31/9) - 1555/11)*step(7*math.pi - t)*step(t - 3*math.pi) + (-29/9*sin(8/9 - 17*t) - 8/9*sin(9/8 - 14*t) - 91/15*sin(5/14 - 12*t) - 16/9*sin(4/9 - 10*t) + 2623/6*sin(t + 11/3) + 853/14*sin(2*t + 39/10) + 109/8*sin(3*t + 5/9) + 187/5*sin(4*t + 49/11) + 352/15*sin(5*t + 11/8) + 87/5*sin(6*t + 50/13) + 101/15*sin(7*t + 11/7) + 47/6*sin(8*t + 30/7) + 121/30*sin(9*t + 13/6) + 121/14*sin(11*t + 75/38) + 33/10*sin(13*t + 34/9) + 31/10*sin(15*t + 9/4) + 121/40*sin(16*t + 25/24) + 36/35*sin(18*t + 21/5) + 14/11*sin(19*t + 18/5) + 9/10*sin(20*t + 25/13) + 7/5*sin(21*t + 7/13) - 717/7)*step(3*math.pi - t)*step(t + math.pi))*step(sqrt(sgn(sin(t/2))))

def dist(x, y):
    return math.sqrt((x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2)

limits = [0, int(84 * math.pi * 100)]

div_const = 4

turtle.penup()
turtle.setposition(x(0) / div_const, y(0) / div_const)
turtle.pendown()

last_pos = (x(0) / div_const, y(0) / div_const)

for i in range(*limits):
    i /= 100
    print(i)
    try:
        if dist(last_pos, (x(i) / div_const, y(i) / div_const)) > 50:
            turtle.penup()
        turtle.setposition(x(i)/div_const, y(i)/div_const)
        if dist(last_pos, (x(i) / div_const, y(i) / div_const)) > 50:
            turtle.pendown()
        last_pos = (x(i) / div_const, y(i) / div_const)
    except:
        print("error")
        pass

turtle.exitonclick()